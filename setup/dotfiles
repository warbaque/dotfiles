#! /usr/bin/env bash

# === [ANSI] ====================================

RESET='\e[0m'
CYAN='\e[1;36m'
YELLOW='\e[1;33m'

# ===============================================

check_link() {
  local src="${HOME}/dotfiles/.${1}"
  local dst="${HOME}/.${1}"

  if [ "$(realpath -P "${src}")" = "$(realpath -P "${dst}")" ]; then
    printf "  âœ“  %-20s -> %-20s\n" "${dst#$HOME/}" "${src#$HOME/}"
  elif [ -e "${dst}" ]; then
    printf "     %-20s != %-20s\n" "(local file)" "${src#$HOME/}"
  else
    printf "     %-20s != %-20s\n" "(not set)" "${src#$HOME/}"
  fi 2>/dev/null
}

dotfiles=(
  zshrc
  tmux.conf
  vimrc
  gitconfig
  config/terminator
)

UNKNOWN_DOTFILES=()
mklinks() {
  for pattern in "${@}"; do
    local dotfile=""
    for candinate in "${dotfiles[@]}"; do
      case "${candinate}" in
        "${pattern#.}") dotfile="${pattern#.}"; break ;;
        *"${pattern#.}"*) [ -z "${dotfile-x}" ] \
          && dotfile="${candinate}" || unset dotfile ;;
      esac
    done
    local src="${HOME}/dotfiles/.${dotfile}"
    local dst="${HOME}/.${dotfile}"
    if [ -z "${dotfile}" ]; then
      UNKNOWN_DOTFILES+=("${YELLOW}WARN${RESET}: unknown dotfile: ${pattern}\n")
    else
      ln -sf "${src}" "${dst}"
    fi
  done
}

mklinks "${@}"

printf "\n${CYAN}DOTFILE LINKS${RESET}\n"
for link in "${dotfiles[@]}"; do
  check_link "${link}"
done

if [ ${#UNKNOWN_DOTFILES[@]} -ne 0 ]; then
  echo
  for msg in "${UNKNOWN_DOTFILES[@]}"; do
    printf "${msg}"
  done
fi
