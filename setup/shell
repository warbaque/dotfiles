#! /bin/sh

# === [ANSI] ====================================

RESET='\e[0m'
CYAN='\e[1;36m'
MAGENTA='\e[1;35m'
YELLOW='\e[1;33m'
RED='\e[1;31m'

err() { printf "${RED}E:${RESET} ${*}\n" >&2; exit 1; }
warn() { printf "${YELLOW}W:${RESET} ${*}\n" >&2; }

# ===============================================

check_cmd() { command -v "${1}" >/dev/null 2>/dev/null; }

run_as_root() {
  if [ "$(id -u)" -ne 0 ]; then
    check_cmd sudo || err "sudo is not installed"
    sudo sh -c "${@}"
  else
    sh -c "${@}"
  fi
}

install() {
  printf "\n${CYAN}INSTALLING${RESET}: ${*}\n"
  run_as_root "apt-get update && apt-get -y install ${*}"
}

# ===============================================

status() {
  printf "\n${CYAN}CORE COMMANDS${RESET}: ${1}\n"
  shift
  MISSING=""
  for cmd in ${@}; do
    if check_cmd "${cmd}"; then
      local is_installed='âœ“'
    else
      local is_installed=' '
      MISSING="${MISSING}$(pkg_map ${cmd}) "
    fi
    printf "${is_installed}  %s\n" "${cmd}"
  done
}

core_commands() {
  status "${@}"
  if [ -n "${MISSING}" ]; then
    install ${MISSING}
    status "${@}"
  fi
}

# ===============================================

setup_zsh() {
  local shell=$(realpath -P $(getent passwd $(whoami) | awk -F: '{print $NF}'))
  local zsh=$(realpath -P $(which zsh))
  [ -z "${zsh}" ] && err "zsh is not installed!"
  if [ "${shell}" = "${zsh}" ]; then
    printf "\n${CYAN}ZSH${RESET}: OK\n"
  else
    printf "\n${CYAN}ZSH${RESET}: changing '${shell}' to '${zsh}'\n"
    sudo chsh -s ${zsh} $(whoami)
  fi
}

setup_dotfiles_dir() {
  if test -d "${HOME}/dotfiles"; then
    printf "\n${CYAN}DOTFILES${RESET}: OK\n"
  else
    printf "\n${CYAN}DOTFILES${RESET}: git clone\n"
    (cd "${HOME}" && git clone https://github.com/warbaque/dotfiles)
  fi
}

# ===============================================

minimal() {
  core_commands "minimal" sudo curl git zsh which jq
  setup_zsh
  setup_dotfiles_dir
  ${HOME}/dotfiles/setup/dotfiles zshrc
}

# ===============================================

pkg_map() {
  case "${1}" in
    fdfind)      echo fd-find ;;
    man)         echo man-db ;;
    lsb_release) echo lsb-release ;;
    dig)         echo dnsutils ;;
    ping)        echo iputils-ping ;;
    *)           echo "${1}" ;;
  esac
}

extra() {
  core_commands "extra" \
    bash \
    wget \
    gpg \
    file \
    unzip \
    tree \
    tmux \
    vim \
    terminator \
    fdfind \
    man \
    lsb_release \
    dig \
    ping
  check_cmd fdfind && sudo install -o root -g root -m 0755 $(which fdfind) /usr/local/bin/fd
}

# ===============================================

tools() {
  local cmd="${1}"; [ -n "${cmd-x}" ] && shift
  case "${cmd}" in
    cloud|kube|node|go|dev) ${HOME}/dotfiles/setup/tools/${cmd} "${@}" ;;
    *)  for tools in cloud kube node go dev; do
          printf "\n${MAGENTA}dotfiles/setup/tools/${tools}${RESET}\n"
          ${HOME}/dotfiles/setup/tools/${tools}
        done ;;
  esac
}

sudoers() {
  local user=${1}
  [ -z "${user}" ] && user=$(whoami)
  [ $(id -u "${user}") -eq 0 ] \
    && echo "user is root" \
    || su root -c "echo '${user} ALL=(ALL) NOPASSWD: ALL' | tee /etc/sudoers.d/user-${user}-sudoers"
}

# ===============================================

case "${@}" in
  minimal|extra|tools*|sudoers*) "${@}" ;;
  dotfiles*) ${HOME}/dotfiles/setup/"${@}" ;;
  *) minimal ;;
esac
