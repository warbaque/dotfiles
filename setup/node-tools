#! /usr/bin/env bash

# === [ANSI] ====================================

RESET='\e[0m'
CYAN='\e[1;36m'
YELLOW='\e[1;33m'

# ===============================================

tools=(
  nvm
  node
  npm
  yarn
)

# ===============================================

version_nvm()   { nvm -v; }
version_node()  { node --version; }
version_npm()   { npm --version; }
version_yarn()  { yarn --version; }

# ===============================================

_install () {(
  [ "${1}" = npm ] && return
  local tmp_dir="$(mktemp -d /tmp/install-XXXXX)"
  trap "rm -rf ${tmp_dir}" EXIT
  cd "${tmp_dir}"
  echo -e "${CYAN}Installing${RESET} [${YELLOW}${1}${RESET}]"
  "install_${1}" "${@:2}" | sed "s/^\r*/  /"
)}

_status() {
  local cmd="${1}"
  if command -v "${cmd}" >/dev/null 2>&1; then
    local is_installed='âœ“'
    local version="$(version_${cmd})";
  else
    local is_installed=' '
    local version="";
  fi
  printf "${is_installed}  %-12s %s\n" "${cmd}" "${version}"
}

# ===============================================

install_nvm() {
  curl -sL https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash
  init_nvm
}

init_nvm() {
  export NVM_DIR="$HOME/.nvm"
  [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
}

install_node() {
  init_nvm
  command -v nvm >/dev/null 2>&1 || install_nvm
  nvm install node 2>&1
}

install_yarn() {
  command -v npm >/dev/null 2>&1 || install_npm
  npm install --global yarn
}

# ===============================================

install_all() {
  for cmd in "${tools[@]}"; do
    _install "${cmd}"
  done
}

status() {
  echo -e "${CYAN}Status${RESET}"
  for cmd in "${tools[@]}"; do
    _status "${cmd}"
  done
}

# ===============================================

init_nvm
if [[ " all ${tools[*]} " =~ " ${1} " ]]; then
  _install "${@}"
fi
status
