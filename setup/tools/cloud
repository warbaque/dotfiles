#! /usr/bin/env bash

# === [ANSI] ====================================

RESET='\e[0m'
CYAN='\e[1;36m'
YELLOW='\e[1;33m'

# ===============================================

tools=(
  az
  aws
  gcloud
  terraform
)

# ===============================================

version_az()        { az version | jq -j '."azure-cli"'; }
version_aws()       { aws --version | grep -Po "aws-cli/\K\S+"; }
version_gcloud()    { gcloud version | grep -Po "Google Cloud SDK \K\S+"; }
version_terraform() { terraform version | grep -Po "Terraform \K\S+"; }

# ===============================================

_install() {(
  local tmp_dir="$(mktemp -d /tmp/install-XXXXX)"
  trap "rm -rf ${tmp_dir}" EXIT
  cd "${tmp_dir}"
  echo -e "${CYAN}Installing${RESET} [${YELLOW}${1}${RESET}]"
  "install_${1}" "${@:2}" | sed "s/^\r*/  /"
)}

_status() {
  local cmd="${1}"
  if command -v "${cmd}" >/dev/null 2>&1; then
    local is_installed='âœ“'
    local version="$(version_${cmd})";
  else
    local is_installed=' '
    local version="";
  fi
  printf "${is_installed}  %-12s %s\n" "${cmd}" "${version}"
}

# ===============================================

install_az() {
  curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
}

install_aws() {
  curl -sLO "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip"
  unzip awscli-exe-linux-x86_64.zip
  sudo ./aws/install "${@}"
}

install_gcloud() {
  _apt_setup \
    "https://packages.cloud.google.com/apt/doc/apt-key.gpg" google-cloud-sdk.gpg \
    "https://packages.cloud.google.com/apt cloud-sdk main" google-cloud-sdk.list

  sudo apt-get update
  sudo apt-get -y install google-cloud-cli
}

install_terraform() {
  _apt_setup \
    "https://apt.releases.hashicorp.com/gpg" hashicorp-archive-keyring.gpg \
    "https://apt.releases.hashicorp.com $(lsb_release -cs) main" hashicorp.list

  sudo apt-get update
  sudo apt-get -y install terraform
}

_apt_setup() {
  local key="/etc/apt/keyrings/${2}"
  sudo mkdir -p -- "$(dirname -- "${key}")"
  curl -fsSL "${1}" \
    | sudo gpg --yes --dearmor -o "${key}"
  echo "deb [arch=$(dpkg --print-architecture) signed-by=${key}] ${3}" \
    | sudo tee "/etc/apt/sources.list.d/${4}"
}

# ===============================================

status() {
  echo -e "${CYAN}Status${RESET}"
  for cmd in "${tools[@]}"; do
    _status "${cmd}"
  done
}

# ===============================================

if [[ " ${tools[*]} " =~ " ${1} " ]]; then
  _install "${@}"
fi
status
