#! /usr/bin/env bash

# === [ANSI] ====================================

RESET='\e[0m'
CYAN='\e[1;36m'
YELLOW='\e[1;33m'

# ===============================================

tools=(
  docker
  subl
)

DISTRO="$(lsb_release -is | tr '[:upper:]' '[:lower:]')"
CODENAME="$(lsb_release -cs)"

# ===============================================

version_docker()    { docker --version | grep -Po "Docker version \K.+"; }
version_subl()      { subl --version | grep -Po "Sublime Text \K.+"; }

# ===============================================

_install () {(
  local tmp_dir="$(mktemp -d /tmp/install-XXXXX)"
  trap "rm -rf ${tmp_dir}" EXIT
  cd "${tmp_dir}"
  echo -e "${CYAN}Installing${RESET} [${YELLOW}${1}${RESET}]"
  "install_${1}" "${@:2}" | sed "s/^\r*/  /"
)}

_status() {
  local cmd="${1}"
  if command -v "${cmd}" >/dev/null 2>&1; then
    local is_installed='âœ“'
    local version="$(version_${cmd})";
  else
    local is_installed=' '
    local version="";
  fi
  printf "${is_installed}  %-12s %s\n" "${cmd}" "${version}"
}

# ===============================================

install_docker() {
  _apt_setup \
    "https://download.docker.com/linux/${DISTRO}/gpg" docker.gpg \
    "https://download.docker.com/linux/${DISTRO} ${CODENAME} stable" docker-stable.list

  sudo apt-get update
  sudo apt-get -y install docker-ce docker-ce-cli containerd.io docker-compose-plugin
  sudo usermod -a -G docker $(whoami)
}

install_subl() {
  _apt_setup \
    "https://download.sublimetext.com/sublimehq-pub.gpg" sublime.gpg \
    "https://download.sublimetext.com apt/stable/" sublime-text-stable.list

  sudo apt-get update
  sudo apt-get -y install sublime-text
}

_apt_setup() {
  local key="/etc/apt/keyrings/${2}"
  sudo mkdir -p -- "$(dirname -- "${key}")"
  curl -fsSL "${1}" \
    | sudo gpg --yes --dearmor -o "${key}"
  echo "deb [arch=$(dpkg --print-architecture) signed-by=${key}] ${3}" \
    | sudo tee "/etc/apt/sources.list.d/${4}"
}

# ===============================================

install_all() {
  for cmd in "${tools[@]}"; do
    _install "${cmd}"
  done
}

status() {
  echo -e "${CYAN}Status${RESET}"
  for cmd in "${tools[@]}"; do
    _status "${cmd}"
  done
}

# ===============================================

if [[ " all ${tools[*]} " =~ " ${1} " ]]; then
  _install "${@}"
fi
status
