#! /usr/bin/env bash

# ===============================================

script_root="$( cd -- "${BASH_SOURCE[0]%/*}" && pwd -P )"
. "${script_root}/lib/helpers.bash"

# ===============================================

tools=(
  kubectl
  kustomize
  helm
  minikube
  k3d
  kind
  skaffold
  argo
  flux
)

version_kubectl()   { kubectl version --client --output=json | jq -j .clientVersion.gitVersion; }
version_kustomize() { kustomize version; }
version_helm()      { helm version --short; }
version_minikube()  { minikube version | grep -Po "version: \K\S+"; }
version_k3d()       { k3d version | head -1 | grep -Po "version \K\S+"; }
version_kind()      { kind version | grep -Po "kind \K(\S+)"; }
version_skaffold()  { skaffold version; }
version_argo()      { argo version --short | grep -Po "argo: \K\S+"; }
version_flux()      { flux version --client | head -1 | grep -Po "flux: \K\S+"; }

# ===============================================

install_kubectl() {
  with_tmp
  curl -sLO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
  sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
}

install_kustomize() {
  with_tmp
  curl -sL "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh" | bash
  sudo install -o root -g root -m 0755 kustomize /usr/local/bin/kustomize
}

install_helm() {
  curl -sL https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
}

install_minikube() {
  with_tmp
  curl -sLO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
  sudo install -o root -g root -m 0755 minikube-linux-amd64 /usr/local/bin/minikube
}

install_k3d() {
  curl -sL https://raw.githubusercontent.com/k3d-io/k3d/main/install.sh | bash
}

install_kind() {
  with_tmp
  curl -sLO https://kind.sigs.k8s.io/dl/v0.15.0/kind-linux-amd64
  sudo install -o root -g root -m 0755 kind-linux-amd64 /usr/local/bin/kind
}

install_skaffold() {
  with_tmp
  curl -sLO https://storage.googleapis.com/skaffold/releases/v2.0.0/skaffold-linux-amd64
  sudo install -o root -g root -m 0755 skaffold-linux-amd64 /usr/local/bin/skaffold
}

install_argo() {
  with_tmp
  curl -sLO https://github.com/argoproj/argo-workflows/releases/download/v3.4.3/argo-linux-amd64.gz
  gunzip argo-linux-amd64.gz
  sudo install -o root -g root -m 0755 argo-linux-amd64 /usr/local/bin/argo
}

install_flux() {
  curl -sL https://fluxcd.io/install.sh | sudo bash
}

# ===============================================

case "${1}" in
  _commands) echo "${tools[*]}";;
  *)
    installer "${@}"
    status
  ;;
esac
